// <auto-generated />
using BookWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240729072112_SeedCategoryTable")]
    partial class SeedCategoryTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookWeb.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Classic"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "Graphic Novel"
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 5,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 6,
                            DisplayOrder = 6,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 7,
                            DisplayOrder = 7,
                            Name = "Historical Fiction"
                        },
                        new
                        {
                            Id = 8,
                            DisplayOrder = 8,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 9,
                            DisplayOrder = 9,
                            Name = "Literary Fiction"
                        },
                        new
                        {
                            Id = 10,
                            DisplayOrder = 10,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 11,
                            DisplayOrder = 11,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 12,
                            DisplayOrder = 12,
                            Name = "Short Story"
                        },
                        new
                        {
                            Id = 13,
                            DisplayOrder = 13,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 14,
                            DisplayOrder = 14,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 15,
                            DisplayOrder = 15,
                            Name = "Poetry"
                        },
                        new
                        {
                            Id = 16,
                            DisplayOrder = 16,
                            Name = "Self-Help"
                        },
                        new
                        {
                            Id = 17,
                            DisplayOrder = 17,
                            Name = "True Crime"
                        },
                        new
                        {
                            Id = 18,
                            DisplayOrder = 18,
                            Name = "Historical"
                        },
                        new
                        {
                            Id = 19,
                            DisplayOrder = 19,
                            Name = "Children"
                        },
                        new
                        {
                            Id = 20,
                            DisplayOrder = 20,
                            Name = "Young Adult"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
